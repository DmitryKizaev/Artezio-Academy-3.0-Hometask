# Задание 3

CREATE TABLE submission (
id INT UNSIGNED NOT NULL AUTO_INCREMENT primary key,
boss_id INT,
peon_id INT
);

# линейный персонал подчиняется боссу, его id 2
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 2, 1);
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 2, 3);
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 2, 4);
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 2, 5);

# покажем подчиненных босса через его id
SELECT peon_table.first_name, peon_table.last_name
FROM submission
JOIN personal_info AS boss_table ON submission.boss_id = boss_table.id
JOIN personal_info AS peon_table ON submission.peon_id = peon_table.id
WHERE boss_table.id = 2;

# курьеры подчиняются линейному персоналу
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 1, 3);
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 5, 3);
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 1, 4);
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 5, 4);

# а сам босс пусть будет подкаблучник и подчиняется секретарше
INSERT INTO submission (id, boss_id, peon_id) VALUES (null, 1, 2);

# покажем начальников курьера по имени Петя
SELECT boss_table.first_name, boss_table.last_name
FROM submission
JOIN personal_info AS boss_table ON submission.boss_id = boss_table.id
JOIN personal_info AS peon_table ON submission.peon_id = peon_table.id
JOIN positions ON positions.id = peon_table.position_id
WHERE peon_table.first_name = "Petya";

# проверим себя и покажем все отношения в виде "босс -> подчиненный"
SELECT boss_id, boss_table.first_name, boss_table.last_name,
peon_id, peon_table.first_name, peon_table.last_name 
FROM submission
JOIN personal_info AS boss_table ON submission.boss_id = boss_table.id
JOIN personal_info AS peon_table ON submission.peon_id = peon_table.id
JOIN positions ON positions.id = peon_table.position_id;